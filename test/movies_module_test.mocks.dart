// Mocks generated by Mockito 5.3.2 from annotations
// in instabug_flutter_task/test/movies_module_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i4;

import 'package:instabug_flutter_task/models/movie.dart' as _i3;
import 'package:instabug_flutter_task/modules/movies_module.dart' as _i2;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

/// A class which mocks [MoviesModule].
///
/// See the documentation for Mockito's code generation for more information.
class MockMoviesModule extends _i1.Mock implements _i2.MoviesModule {
  MockMoviesModule() {
    _i1.throwOnMissingStub(this);
  }

  @override
  List<_i3.Movie> get movies => (super.noSuchMethod(
        Invocation.getter(#movies),
        returnValue: <_i3.Movie>[],
      ) as List<_i3.Movie>);
  @override
  _i4.Future<List<_i3.Movie>> getMovies() => (super.noSuchMethod(
        Invocation.method(
          #getMovies,
          [],
        ),
        returnValue: _i4.Future<List<_i3.Movie>>.value(<_i3.Movie>[]),
      ) as _i4.Future<List<_i3.Movie>>);
  @override
  _i4.Future<void> onRefresh() => (super.noSuchMethod(
        Invocation.method(
          #onRefresh,
          [],
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);
  @override
  void clearMovies() => super.noSuchMethod(
        Invocation.method(
          #clearMovies,
          [],
        ),
        returnValueForMissingStub: null,
      );
}
